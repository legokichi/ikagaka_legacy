// Generated by CoffeeScript 1.6.3
var TaskQueue, calcOffset, clearCanvas, composeElements, copyCanvas, drawImage, drawSurface, execmap, isHit, loadImage, transImage;

execmap = function(reg, str, fn) {
  var ary, matches;
  ary = [];
  while (true) {
    matches = reg.exec(str);
    if (matches == null) {
      break;
    }
    ary.push(fn(matches));
  }
  return ary;
};

loadImage = function(src, cb) {
  var img;
  img = new Image;
  img.onerror = error;
  img.onload = cb;
  return img.src = src;
};

transImage = function(img) {
  var b, cnv, ctx, data, g, i, imgdata, r, v, _i, _len, _ref;
  cnv = copyCanvas(img);
  ctx = cnv.getContext("2d");
  imgdata = ctx.getImageData(0, 0, img.width, img.height);
  data = imgdata.data;
  _ref = [data[0], data[1], data[2]], r = _ref[0], g = _ref[1], b = _ref[2];
  for (i = _i = 0, _len = data.length; _i < _len; i = _i += 4) {
    v = data[i];
    if (r === data[i] && g === data[i + 1] && b === data[i + 2]) {
      data[i + 3] = 0;
    }
  }
  ctx.putImageData(imgdata, 0, 0);
  return cnv;
};

copyCanvas = function(img) {
  var cnv, ctx;
  cnv = document.createElement("canvas");
  ctx = cnv.getContext("2d");
  cnv.width = img.width;
  cnv.height = img.height;
  ctx.drawImage(img, 0, 0);
  return cnv;
};

drawImage = function(a, b, x, y, cmp) {
  var ctx;
  ctx = a.getContext("2d");
  ctx.drawImage(b, x, y);
  return a;
};

clearCanvas = function(cnv) {
  cnv.width = cnv.width;
  return cnv;
};

drawSurface = function(a, b) {
  if (a.parentNode != null) {
    a.parentNode.width = b.width;
    a.parentNode.height = b.height;
  }
  a.width = b.width;
  a.height = b.height;
  return drawImage(a, b, 0, 0);
};

composeElements = function(target, ary) {
  ary.forEach(function(_arg) {
    var cmp, cnv, x, y;
    cnv = _arg.cnv, x = _arg.x, y = _arg.y, cmp = _arg.cmp;
    if (target.width === 0) {
      target.width = cnv.width;
      target.height = cnv.height;
    }
    return drawImage(target, cnv, x, y, cmp);
  });
  return target;
};

isHit = function(target, x, y) {
  var ctx, imgdata;
  ctx = target.getContext("2d");
  imgdata = ctx.getImageData(0, 0, x, y);
  return imgdata.data[imgdata.data.length - 1] !== 0;
};

calcOffset = function(e) {
  return {
    x: e.offsetX || e.layerX,
    y: e.offsetY || e.layerY
  };
};

TaskQueue = (function() {
  function TaskQueue() {
    this.queue = [];
  }

  TaskQueue.prototype.push = function(fn) {
    this.queue.push(fn);
    return this;
  };

  TaskQueue.prototype.run = function(rslt, cb) {
    var next,
      _this = this;
    next = function(rslt) {
      if (_this.queue.length === 0) {
        cb(rslt);
      } else {
        _this.queue.shift()(rslt, next);
      }
      return void 0;
    };
    next(rslt);
    return void 0;
  };

  return TaskQueue;

})();
